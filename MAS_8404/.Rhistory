library(ProjectTemplate)
load()
load.project()
setwd("~/CSC_8631_Project/CSC_8631_Analysis")
setwd("~/")
setwd("C:/Users/Harvey")
setwd("~/")
getwd()
source("~/CSC_8631_Project/CSC_8631_Analysis/munge/01-A.R")
source("~/CSC_8631_Project/CSC_8631_Analysis/munge/01-A.R")
getwd()
setwd("~/")
setwd("C:/Users/Harvey")
getwd()
cd(~/)
source("~/CSC_8631_Project/CSC_8631_Analysis/munge/01-A.R")
View(df_Enrolments)
getwd()
cd(~/)
cd(~\)
setwd("~\")
c:/Users/Harvey
qqq
getwd()
setwd("~\")
C:\Users\Harvey\
C:/Users/Harvey/
library(ProjectTemplate)
test <- read.csv("C:\Users\Harvey\Downloads\yellow_tripdata_2021-07.csv", header=TRUE, stringsAsFactors=FALSE)
test <- read.csv("C:\\Users\\Harvey\\Downloads\\yellow_tripdata_2021-07.csv", header=TRUE, stringsAsFactors=FALSE)
test <- read.csv("C:\Users\Harvey\Downloads\yellow_tripdata_2021-07.csv", header=TRUE, stringsAsFactors=FALSE)
View(test)
# Script to set up Project
setwd("~/../CSC_8634/")
# Loads "ProjectTemplate" library and loads the project
library('ProjectTemplate')
load.project()
# Script to set up Project
setwd("~/./CSC_8634/")
# Loads "ProjectTemplate" library and loads the project
library('ProjectTemplate')
load.project()
# Script to set up Project
setwd("~./CSC_8634/")
# Loads "ProjectTemplate" library and loads the project
library('ProjectTemplate')
load.project()
# Script to set up Project
setwd("./CSC_8634/")
# Loads "ProjectTemplate" library and loads the project
library('ProjectTemplate')
load.project()
# Script to set up Project
setwd("./CSC_8634/")
# Loads "ProjectTemplate" library and loads the project
library('ProjectTemplate')
load.project()
# Example preprocessing script.
#Read in data - When data is added to the data files, the code #2 can be used
vle = read.table(file = "C:/Users/Harvey/Documents/Newcastle University/CSC 8633/anonymisedData/vle.csv", sep = ',', header = T)
#vle = read.table(file = "./data/vle.csv", sep = ',', header = T)
student_info = read.table(file = "C:/Users/Harvey/Documents/Newcastle University/CSC 8633/anonymisedData/studentInfo.csv", sep = ',', header = T)
#student_info = read.table(file = "./data/studentInfo.csv", sep = ',', header = T)
library(tidyverse)
library(data.table)
library(ggplot2)
# Counting the number of activities per code module and Presentation
df_activity_count <- vle %>%
count(code_module,code_presentation,activity_type) %>% rename(activity_type_count = n)
# Sum of activities per code module and presentation
df_total_count <- df_activity_count %>%
group_by(code_module, code_presentation) %>%
summarise(activity_type=sum(`activity_type_count`), .groups='drop')
# Total pass fail by code module, presentation and final result
df.1 <- student_info %>%
group_by(code_module, code_presentation) %>%
summarise(Pass = sum(final_result == 'Pass'), .groups = 'drop')
df.2 <- student_info %>%
group_by(code_module, code_presentation) %>%
summarise(Fail = sum(final_result == 'Fail'), .groups = 'drop')
df.3 <- student_info %>%
group_by(code_module, code_presentation) %>%
summarise(Distinction = sum(final_result == 'Distinction'), .groups = 'drop')
df.4 <- student_info %>%
group_by(code_module, code_presentation) %>%
summarise(Withdrawn = sum(final_result == 'Withdrawn'), .groups = 'drop')
#Merging df to create 1
df_merged <- merge(merge(merge(merge(df_total_count, df.1, by = c("code_module", "code_presentation")),
df.2, by = c("code_module", "code_presentation")),
df.3,  by = c("code_module", "code_presentation")),
df.4, by = c("code_module", "code_presentation"))
View(df_merged)
atc <- ggplot(data = df_merged,mapping=aes(x=code_module, y=activity_type, fill = code_presentation))+
geom_bar(stat="identity")+
ggtitle('Sum of activities per module')+
theme_bw()
atc
pass <- ggplot(data = df_merged,mapping=aes(x=code_module, y=Pass, fill = code_presentation))+
geom_bar(stat="identity")+
ggtitle('Sum of students Pass per module')+
theme_bw()
pass
fail <- ggplot(data = df_merged,mapping=aes(x=code_module, y=Fail, fill = code_presentation))+
geom_bar(stat="identity")+
ggtitle('Sum of students Fail per module')+
theme_bw()
fail
dist <- ggplot(data = df_merged,mapping=aes(x=code_module, y=Distinction, fill = code_presentation))+
geom_bar(stat="identity")+
ggtitle('Sum of students Distinction per module')+
theme_bw()
dist
job_title <- c("AI Scientist","Business Data Analyst","Data Analyst")
job_title <- c("AI Scientist","Business Data Analyst","Data Analyst","Data Engineer","Data Science Manager","Data Scientist","Director of Data Science","Lead Data Engineer","Machine Learning Engineer","Machine Learning Infrastructure Engineer","Machine Learning Scientist","Principal Data Scientist","Research Scientist")
2020 Mean <- c(" £45,896.00"," £135,000.00"," £45,547.29"," £88,162.00"," £190,200.00"," £89,185.60"," £325,000.00"," £90,500.00"," £125,389.80"," £50,180.00"," £260,000.00"," £148,261.00"," £246,000.00")
2020_mean <- c(" £45,896.00"," £135,000.00"," £45,547.29"," £88,162.00"," £190,200.00"," £89,185.60"," £325,000.00"," £90,500.00"," £125,389.80"," £50,180.00"," £260,000.00"," £148,261.00"," £246,000.00")
mean_2020 <- c(" £45,896.00"," £135,000.00"," £45,547.29"," £88,162.00"," £190,200.00"," £89,185.60"," £325,000.00"," £90,500.00"," £125,389.80"," £50,180.00"," £260,000.00"," £148,261.00"," £246,000.00")
mean_2021 <- c(" £36,526.50"," £59,102.00"," £83,827.38"," £85,758.00"," £143,126.50"," £70,671.73"," £168,707.80"," £179,720.00"," £74,611.22"," £195,000.00"," £190,000.00"," £194,940.50"," £83,003.60")
mean_2020 <- c(" £160,000.00"," £44,677.00"," £100,550.74"," £127,187.27"," £170,196.60"," £137,136.68"," £196,979.00"," £118,187.00"," £129,451.94"," £58,255.00"," £141,766.67"," £162,674.00"," £105,569.00")
mean_2020 <- c(" £45,896.00"," £135,000.00"," £45,547.29"," £88,162.00"," £190,200.00"," £89,185.60"," £325,000.00"," £90,500.00"," £125,389.80"," £50,180.00"," £260,000.00"," £148,261.00"," £246,000.00")
mean_2022 <- c(" £160,000.00"," £44,677.00"," £100,550.74"," £127,187.27"," £170,196.60"," £137,136.68"," £196,979.00"," £118,187.00"," £129,451.94"," £58,255.00"," £141,766.67"," £162,674.00"," £105,569.00")
Difference_20-21 <- c(" -26%"," -128%"," 46%"," -3%"," -33%"," -26"," -93"," 50%"," -68%"," 74%"," -37%"," 24%"," -196%")
Difference_21/22 <- c(" 77%"," -32%"," 17%"," 33%"," 16%"," 48%"," 14%"," -52%"," 42%"," -235%"," -34%"," -20%"," 21%")
Difference_21>22 <- c(" 77%"," -32%"," 17%"," 33%"," 16%"," 48%"," 14%"," -52%"," 42%"," -235%"," -34%"," -20%"," 21%")
Difference_21_22 <- c(" 77%"," -32%"," 17%"," 33%"," 16%"," 48%"," 14%"," -52%"," 42%"," -235%"," -34%"," -20%"," 21%")
Difference_20_21 <- c(" -26%"," -128%"," 46%"," -3%"," -33%"," -26%"," -93%"," 50%"," -68%"," 74%"," -37%"," 24%"," -196%")
mean_salaries <- data.frame(job_title,mean_2020,mean_2021,mean_2022,Difference_20_21,Difference_21_22)
View(mean_salaries)
mean_2020 <- c("45,896.00","135,000.00","45,547.29","88,162.00","190,200.00","89,185.60","325,000.00","90,500.00","125,389.80","50,180.00","260,000.00","148,261.00","246,000.00")
mean_salaries <- data.frame(job_title,mean_2020,mean_2021,mean_2022,Difference_20_21,Difference_21_22)
mean_2021 <- c("36,526.50","59,102.00","83,827.38","85,758.00","143,126.50","70,671.73","168,707.80","179,720.00","74,611.22","195,000.00","190,000.00","194,940.50","83,003.60")
mean_2022 <- c("160,000.00","44,677.00","100,550.74","127,187.27","170,196.60","137,136.68","196,979.00","118,187.00","129,451.94","58,255.00","141,766.67","162,674.00","105,569.00")
mean_salaries <- data.frame(job_title,mean_2020,mean_2021,mean_2022,Difference_20_21,Difference_21_22)
ggplot()
ggplot2::hist(mean_salaries
)
View(mean_salaries)
mean_salary <- data.frame(
job_title = c("AI Scientist","Business Data Analyst","Data Analyst"),
mean_2020 = c("45,896.00","135,000.00","45,547.29","88,162.00","190,200.00","89,185.60","325,000.00","90,500.00","125,389.80","50,180.00","260,000.00","148,261.00","246,000.00"),
mean_2021 = c("160,000.00","44,677.00","100,550.74","127,187.27","170,196.60","137,136.68","196,979.00","118,187.00","129,451.94","58,255.00","141,766.67","162,674.00","105,569.00"),
mean_2022 = c("160,000.00","44,677.00","100,550.74","127,187.27","170,196.60","137,136.68","196,979.00","118,187.00","129,451.94","58,255.00","141,766.67","162,674.00","105,569.00"),
difference_20_21 = c(" -26%"," -128%"," 46%"," -3%"," -33%"," -26%"," -93%"," 50%"," -68%"," 74%"," -37%"," 24%"," -196%"),
difference_21_22 = c(" 77%"," -32%"," 17%"," 33%"," 16%"," 48%"," 14%"," -52%"," 42%"," -235%"," -34%"," -20%"," 21%"))
mean_salary <- data.frame(
job_title = c("AI Scientist","Business Data Analyst","Data Analyst"), mean_2020 = c("45,896.00","135,000.00","45,547.29","88,162.00","190,200.00","89,185.60","325,000.00","90,500.00","125,389.80","50,180.00","260,000.00","148,261.00","246,000.00"),mean_2021 = c("160,000.00","44,677.00","100,550.74","127,187.27","170,196.60","137,136.68","196,979.00","118,187.00","129,451.94","58,255.00","141,766.67","162,674.00","105,569.00"),mean_2022 = c("160,000.00","44,677.00","100,550.74","127,187.27","170,196.60","137,136.68","196,979.00","118,187.00","129,451.94","58,255.00","141,766.67","162,674.00","105,569.00"),difference_20_21 = c(" -26%"," -128%"," 46%"," -3%"," -33%"," -26%"," -93%"," 50%"," -68%"," 74%"," -37%"," 24%"," -196%"),difference_21_22 = c(" 77%"," -32%"," 17%"," 33%"," 16%"," 48%"," 14%"," -52%"," 42%"," -235%"," -34%"," -20%"," 21%"))
mean_salary <- data.frame(job_title = c("AI Scientist","Business Data Analyst","Data Analyst"), mean_2020 = c("45,896.00","135,000.00","45,547.29","88,162.00","190,200.00","89,185.60","325,000.00","90,500.00","125,389.80","50,180.00","260,000.00","148,261.00","246,000.00"),mean_2021 = c("160,000.00","44,677.00","100,550.74","127,187.27","170,196.60","137,136.68","196,979.00","118,187.00","129,451.94","58,255.00","141,766.67","162,674.00","105,569.00"),mean_2022 = c("160,000.00","44,677.00","100,550.74","127,187.27","170,196.60","137,136.68","196,979.00","118,187.00","129,451.94","58,255.00","141,766.67","162,674.00","105,569.00"),difference_20_21 = c(" -26%"," -128%"," 46%"," -3%"," -33%"," -26%"," -93%"," 50%"," -68%"," 74%"," -37%"," 24%"," -196%"),difference_21_22 = c(" 77%"," -32%"," 17%"," 33%"," 16%"," 48%"," 14%"," -52%"," 42%"," -235%"," -34%"," -20%"," 21%"))
mean_salary <- data.frame(job_title = c("AI Scientist","Business Data Analyst","Data Analyst","Data Engineer","Data Science Manager","Data Scientist","Director of Data Science","Lead Data Engineer","Machine Learning Engineer","Machine Learning Infrastructure Engineer","Machine Learning Scientist","Principal Data Scientist","Research Scientist"), mean_2020 = c("45,896.00","135,000.00","45,547.29","88,162.00","190,200.00","89,185.60","325,000.00","90,500.00","125,389.80","50,180.00","260,000.00","148,261.00","246,000.00"),mean_2021 = c("160,000.00","44,677.00","100,550.74","127,187.27","170,196.60","137,136.68","196,979.00","118,187.00","129,451.94","58,255.00","141,766.67","162,674.00","105,569.00"),mean_2022 = c("160,000.00","44,677.00","100,550.74","127,187.27","170,196.60","137,136.68","196,979.00","118,187.00","129,451.94","58,255.00","141,766.67","162,674.00","105,569.00"),difference_20_21 = c(" -26%"," -128%"," 46%"," -3%"," -33%"," -26%"," -93%"," 50%"," -68%"," 74%"," -37%"," 24%"," -196%"),difference_21_22 = c(" 77%"," -32%"," 17%"," 33%"," 16%"," 48%"," 14%"," -52%"," 42%"," -235%"," -34%"," -20%"," 21%"))
View(mean_salary)
mean_salary <- data.frame(job_title = c("AI Scientist","Business Data Analyst","Data Analyst","Data Engineer","Data Science Manager","Data Scientist","Director of Data Science","Lead Data Engineer","Machine Learning Engineer","Machine Learning Infrastructure Engineer","Machine Learning Scientist","Principal Data Scientist","Research Scientist"), mean_2020 = c("45,896.00","135,000.00","45,547.29","88,162.00","190,200.00","89,185.60","325,000.00","90,500.00","125,389.80","50,180.00","260,000.00","148,261.00","246,000.00"),mean_2021 = c("36,526.50","59,102.00","83,827.38","85,758.00","143,126.50","70,671.73","168,707.80","179,720.00","74,611.22","195,000.00","190,000.00","194,940.50","83,003.60"),mean_2022 = c("160,000.00","44,677.00","100,550.74","127,187.27","170,196.60","137,136.68","196,979.00","118,187.00","129,451.94","58,255.00","141,766.67","162,674.00","105,569.00"),difference_20_21 = c(" -26%"," -128%"," 46%"," -3%"," -33%"," -26%"," -93%"," 50%"," -68%"," 74%"," -37%"," 24%"," -196%"),difference_21_22 = c(" 77%"," -32%"," 17%"," 33%"," 16%"," 48%"," 14%"," -52%"," 42%"," -235%"," -34%"," -20%"," 21%"))
knitr::opts_chunk$set(echo = TRUE)
mean_salary <- data.frame(job_title = c("AI Scientist","Business Data Analyst","Data Analyst","Data Engineer","Data Science Manager","Data Scientist","Director of Data Science","Lead Data Engineer","Machine Learning Engineer","Machine Learning Infrastructure Engineer","Machine Learning Scientist","Principal Data Scientist","Research Scientist"), mean_2020 = c("45,896.00","135,000.00","45,547.29","88,162.00","190,200.00","89,185.60","325,000.00","90,500.00","125,389.80","50,180.00","260,000.00","148,261.00","246,000.00"),mean_2021 = c("36,526.50","59,102.00","83,827.38","85,758.00","143,126.50","70,671.73","168,707.80","179,720.00","74,611.22","195,000.00","190,000.00","194,940.50","83,003.60"),mean_2022 = c("160,000.00","44,677.00","100,550.74","127,187.27","170,196.60","137,136.68","196,979.00","118,187.00","129,451.94","58,255.00","141,766.67","162,674.00","105,569.00"),difference_20_21 = c(" -26%"," -128%"," 46%"," -3%"," -33%"," -26%"," -93%"," 50%"," -68%"," 74%"," -37%"," 24%"," -196%"),difference_21_22 = c(" 77%"," -32%"," 17%"," 33%"," 16%"," 48%"," 14%"," -52%"," 42%"," -235%"," -34%"," -20%"," 21%"))
print(mean_salary)
library(tidyverse)
library(kableextra)
install.packages("zoo")
library(zoo)
install.packages("kableExtra")
ggplot() + geom_line(aes(y=job_title, x=))
getwd()
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
knitr::opts_knit$set(root.dir= normalizePath('..'))
getwd()
knitr::include_graphics("Mean_salary.png",error = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
knitr::opts_knit$set(root.dir= normalizePath('..'))
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
knitr::opts_knit$set(root.dir= normalizePath('..'))
getwd()
knitr::include_graphics("Mean_salary.png",error = FALSE)
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
knitr::include_graphics("Mean_salary.png",error = FALSE)
tinytex::reinstall_tinytex(repository = "illinois")
getwd()
knitr::include_graphics("Mean_salary.png",error = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
knitr::opts_knit$set(root.dir= normalizePath('..'))
knitr::include_graphics("Mean_salary.png",error = FALSE)
knitr::include_graphics("Mean_salary.png",error = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
knitr::opts_knit$set(root.dir= normalizePath('..'))
setwd("~/Documents/Masters/MAS_8404/MAS_8404")
library('ProjectTemplate')
load.project()
for (dataset in project.info$data)
{
message(paste('Showing top 5 rows of', dataset))
print(head(get(dataset)))
}
library('ProjectTemplate')
load.project()
for (dataset in project.info$data)
{
message(paste('Showing top 5 rows of', dataset))
print(head(get(dataset)))
}
View(BreastCancer)
pairs(BreastCancer[,-11])
View(BreastCancer)
na.omit(BreastCancer)
View(BreastCancer)
## Load mlbench package
library(mlbench)
## Load the data
data(BreastCancer)
View(BreastCancer)
library(tidyverse)
na_BC %>% drop_na(BreastCancer)
na_BC -> drop_na(BreastCancer)
drop_na(BreastCancer)
no_NA <- drop_na(BreastCancer)
View(no_NA)
## Load mlbench package
library(mlbench)
## Load the data
data(BreastCancer)
library(tidyverse)
na_BC <- drop_na(BreastCancer)
## Load mlbench package
library(mlbench)
## Load the data
data(BreastCancer)
library(tidyverse)
na_NA <- drop_na(BreastCancer)
## Load mlbench package
library(mlbench)
## Load the data
data(BreastCancer)
library(tidyverse)
no_NA <- drop_na(BreastCancer)
rm(na_NA,na_BC)
pairs(no_NA[,-1 -11])
pairs(no_NA[,-1])
pairs(no_NA[,-1,-11])
pairs(no_NA[,-1&-11])
pairs(no_NA[,-1.-11])
pairs(no_NA[,-1-11])
no_NA <- no_NA[,-1]
View(no_NA)
summary(no_NA)
summary(no_NA)
View(no_NA)
f <- factor(c(17, 9, 27, 36))
class(f)
class(no_NA)
rm(f)
colMeans(no_NA)
View(no_NA)
no_NA <- no_NA[,-11]
View(no_NA)
no_NA <- no_NA[,-10]
colMeans(no_NA)
class(no_NA)
no_NA2 <- no_NA
no_NA2$x <- as.numeric(as.factor(no_NA2$x))
View(no_NA2)
as.number(no_NA2)
as.numeric(no_NA2)
head(no_NA2)
class(no_NA2)
no_NA2 <- no_NA[ , unlist(lapply(data,
is.numeric))]
no_NA2
no_NA2 <- no_NA
View(no_NA)
View(no_NA2)
View(no_NA)
View(no_NA2)
print(typeof(Cell.size))
print(typeof(no_NA2$Cell.size))
print(typeof(no_NA2))
print(typeof(no_NA2$Cl.thickness))
print(typeof(no_NA2$Cell.shape))
print(typeof(no_NA2$Cell.size))
xd= rpois(1000,3)
barplot(table(xd))
barplot(table(no_NA2))
xd <- no_NA2$Cl.thickness
xd
barplot(table(no_NA2))
heatmap(no_NA2, Rowv = NA, Colv = NA, labRow = NA)
test <- data.matrix(no_NA2, rownames.force=NA)
View(test)
barplot(table(test))
View(test)
barplot(table(test$Cl.thickness))
barplot(table(test))
test$Cl.thickness
dim(test)
class(test)
test <- data.matrix(no_NA2$Cl.thickness, rownames.force=NA)
test1 <- data.matrix(no_NA2$Cl.thickness, rownames.force=NA)
test <- data.matrix(no_NA2, rownames.force=NA)
barplot(table(test1))
BreastCancer[,2]
View(BreastCancer)
colMeans(no_NA2)
class(no_NA2)
colMeans(test)
mBC <- data.matrix(no_NA2, rownames.force=NA)
mBC
colMeans(mBC)
rm(no_NA2)
class(mBC)
var(mBC)
VBC <- apply(mBC, 2, var)
VBC
cor(mBC)
colnames(mBC)
X = mBC[,c(2,3)]
View(X)
plot(X[,1], X[,2], xlab = expression(x[1]), ylab = expression(x[2]))
z = scale(X)
plot(z[,1], z[,2], xlab = expression(z[1]), ylab = expression(z[2]))
str(mBC)
no_NA <- drop_na(BreastCancer)
View(no_NA)
no_NA <- no_NA[,-1]
no_NA$Class <- factor(no_NA$Class)
View(no_NA)
str(no_NA)
for(x in 1:9) {}
for(x in 1:9) {
no_NA[,x] <- as.numeric(as.character(no_NA[,x]))
}
View(no_NA)
mBC <- data.matrix(no_NA, rownames.force=NA)
View(mBC)
View(no_NA)
str(no_NA)
VBC <- apply(mBC, 2, var)
VBC1 <- apply(x, 2, var)
for(x in 1:9) {
no_NA[,x] <- as.numeric(as.character(no_NA[,x]))
}
VBC <- apply(mBC, 2, var)
VBC1 <- apply(no_NA, 2, var)
colMeans(X)
colMeans(z)
apply(z, 2, vaar)
apply(z, 2, var)
S = var(mBC)
View(S)
s_sq = diag(S)
(s_sq = diag(S))
(total_variantion = sum(s_sq))
(pca1 = prcomp(x=mBC))
summary(pca1)
## Load mlbench package
library(mlbench)
## Load the data
data(BreastCancer)
library(tidyverse)
## Removing NA not replacing with Mode/Median
no_NA <- drop_na(BreastCancer)
## Removing ID column
no_NA <- no_NA[,-1]
no_NA <- no_NA[,-10]
## Turn data frame to matrix
mBC <- data.matrix(no_NA, rownames.force=NA)
## Calculating the Variance
VBC <- apply(mBC, 2, var)
## Correlation
cor(mBC)
## Selecting Cell Size and Shape
X = mBC[,c(2,3)]
plot(X[,1], X[,2], xlab = expression(x[1]), ylab = expression(x[2]))
z = scale(X)
plot(z[,1], z[,2], xlab = expression(z[1]), ylab = expression(z[2]))
## Sample Covariance
S = var(mBC)
(s_sq = diag(S))
## Total Variance
(total_variantion = sum(s_sq))
## PCA on data
(pca1 = prcomp(x=mBC))
pca1$sdev
summary(pca1)
plot(pca1, type="lines",main"")
plot(pca1, type="lines",main"")
title(xlab="Component Number")
plot(pca1, type="lines",main"")
title(xlab="Component Number")
plot(pca1, type="lines",main"")
## Sample Covariance
S = var(mBC)
(s_sq = diag(S))
## Total Variance
(total_variantion = sum(s_sq))
## PCA on data
(pca1 = prcomp(x=mBC))
View(pca1)
plot(pca1, type="lines",main"")
title(xlab="Component Number")
plot(pca1, type="lines",main="")
title(xlab="Component Number")
cor(mBC)
VBC <- apply(mBC, 2, var)
VBC
## Correlation
cor1 <- cor(mBC)
View(cor1)
(pca2 = prcomp(x=mBC, scale =TRUE ))
(pca1 = prcomp(x=mBC))
(pca2 = prcomp(x=mBC, scale =TRUE ))
summary(pca1)
summary(pca2)
plot(pca2, type="lines",main="")
title(xlab="Component Number")
View(z)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
plot(z[,1], z[,2], xlab = expression(z[1]), ylab = expression(z[2]))
R --version
version
version
